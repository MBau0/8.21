#include "FontMap.h"

#include "../src/System/Environment.h"
#include "../src/Resources/Window.h"

constexpr Character verdana_characters[] = {
  {' ', 254, 111, 3, 3, 1, 1},
  {'!', 101, 85, 6, 26, -3, 26},
  {'"', 162, 111, 12, 11, -1, 26},
  {'#', 123, 33, 23, 26, -2, 26},
  {'$', 111, 0, 19, 32, -1, 26},
  {'%', 298, 0, 32, 26, -1, 26},
  {'&', 0, 33, 26, 26, 0, 26},
  {'\'', 174, 111, 6, 11, -1, 26},
  {'(', 35, 0, 12, 33, -2, 26},
  {')', 47, 0, 12, 33, -1, 26},
  {'*', 90, 111, 18, 16, -1, 55},
  {'+', 127, 85, 22, 23, -2, 45},
  {',', 153, 111, 9, 12, -1, 12},
  {'-', 218, 111, 13, 5, -1, 45},
  {'.', 212, 111, 6, 6, -3, 26},
  {'/', 130, 0, 17, 32, 2, 26},
  {'0', 120, 59, 19, 26, -1, 26},
  {'1', 50, 85, 15, 26, -3, 26},
  {'2', 139, 59, 19, 26, -1, 26},
  {'3', 253, 59, 18, 26, -1, 26},
  {'4', 0, 59, 20, 26, 0, 26},
  {'5', 343, 59, 17, 26, -2, 26},
  {'6', 158, 59, 19, 26, -1, 26},
  {'7', 177, 59, 19, 26, -1, 26},
  {'8', 196, 59, 19, 26, -1, 26},
  {'9', 20, 59, 20, 26, 0, 26},
  {':', 83, 111, 7, 20, 3, 26},
  {';', 91, 85, 10, 26, -2, 19},
  {'<', 224, 85, 20, 20, -3, 45},
  {'=', 131, 111, 22, 12, -2, 45},
  {'>', 203, 85, 21, 20, -3, 45},
  {'?', 34, 85, 16, 26, -1, 26},
  {'@', 175, 0, 30, 29, -1, 26},
  {'A', 51, 33, 24, 26, 1, 26},
  {'B', 40, 59, 20, 26, -2, 26},
  {'C', 146, 33, 23, 26, 0, 26},
  {'D', 192, 33, 22, 26, -2, 26},
  {'E', 271, 59, 18, 26, -2, 26},
  {'F', 0, 85, 17, 26, -2, 26},
  {'G', 75, 33, 24, 26, 0, 26},
  {'H', 60, 59, 20, 26, -2, 26},
  {'I', 79, 85, 12, 26, -1, 26},
  {'J', 65, 85, 14, 26, 1, 26},
  {'K', 302, 33, 21, 26, -2, 26},
  {'L', 17, 85, 17, 26, -2, 26},
  {'M', 169, 33, 23, 26, -2, 26},
  {'N', 80, 59, 20, 26, -2, 26},
  {'O', 26, 33, 25, 26, 0, 26},
  {'P', 289, 59, 18, 26, -2, 26},
  {'Q', 86, 0, 25, 32, 0, 26},
  {'R', 214, 33, 22, 26, -2, 26},
  {'S', 100, 59, 20, 26, -1, 26},
  {'T', 236, 33, 22, 26, 1, 26},
  {'U', 323, 33, 21, 26, -1, 26},
  {'V', 99, 33, 24, 26, 1, 26},
  {'W', 330, 0, 32, 26, 0, 26},
  {'X', 258, 33, 22, 26, 0, 26},
  {'Y', 280, 33, 22, 26, 1, 26},
  {'Z', 344, 33, 21, 26, -1, 26},
  {'[', 59, 0, 11, 33, -2, 26},
  {'\\', 147, 0, 16, 32, 0, 26},
  {']', 70, 0, 11, 33, -1, 26},
  {'^', 108, 111, 23, 15, -2, 55},
  {'_', 231, 111, 23, 4, 1, -2},
  {'`', 203, 111, 9, 8, -4, 45},
  {'a', 320, 85, 18, 20, 0, 26},
  {'b', 205, 0, 19, 27, -1, 26},
  {'c', 18, 111, 17, 20, 0, 26},
  {'d', 224, 0, 18, 27, 0, 26},
  {'e', 244, 85, 19, 20, 0, 26},
  {'f', 278, 0, 14, 27, 0, 26},
  {'g', 307, 59, 18, 26, 0, 26},
  {'h', 242, 0, 18, 27, -1, 26},
  {'i', 107, 85, 6, 26, -1, 26},
  {'j', 163, 0, 12, 32, -1, 12},
  {'k', 260, 0, 18, 27, -2, 26},
  {'l', 292, 0, 6, 27, -1, 26},
  {'m', 149, 85, 28, 20, -2, 26},
  {'n', 338, 85, 18, 20, -1, 26},
  {'o', 263, 85, 19, 20, 0, 26},
  {'p', 215, 59, 19, 26, -1, 12},
  {'q', 325, 59, 18, 26, 0, 26},
  {'r', 69, 111, 14, 20, -1, 26},
  {'s', 35, 111, 17, 20, 0, 26},
  {'t', 113, 85, 14, 25, 1, 26},
  {'u', 0, 111, 18, 20, -1, 26},
  {'v', 282, 85, 19, 20, 0, 26},
  {'w', 177, 85, 26, 20, 0, 26},
  {'x', 301, 85, 19, 20, 0, 26},
  {'y', 234, 59, 19, 26, 0, 12},
  {'z', 52, 111, 17, 20, 0, 26},
  {'{', 0, 0, 18, 33, -1, 26},
  {'|', 81, 0, 5, 33, -5, 26},
  {'}', 18, 0, 17, 33, -2, 26},
  {'~', 180, 111, 23, 10, -2, 15},
};

constexpr Font verdana_font = { "Verdana", 32, 0, 0, 365, 131, 95, verdana_characters };

FontMap::FontMap() {
	const size_t size = sizeof(verdana_characters) / sizeof(Character);

	for (size_t i = 0; i < size; ++i) {
		_font_map.insert(std::pair<char, const Character*>(verdana_characters[i].codePoint, &verdana_characters[i]));
	}
}

const Character* FontMap::get(char c) {
	return _font_map[c];
}

const float FontMap::width(char c) {
	return (float)_font_map[c]->width / (float)verdana_font.width;
}

const float FontMap::height(char c) {
	return (float)_font_map[c]->height / (float)verdana_font.height;
}

const glm::vec2 FontMap::position(char c) {
	return { (float)_font_map[c]->x / (float)verdana_font.width,
		     (float)_font_map[c]->y / (float)verdana_font.height
	};
}

const glm::vec2 FontMap::origin(char c) {
	return { (1.0f - (float)_font_map[c]->originX) / (float)verdana_font.width,
		     (26.0f - (float)_font_map[c]->originY) / ((float)verdana_font.height + 200.0f) };
}